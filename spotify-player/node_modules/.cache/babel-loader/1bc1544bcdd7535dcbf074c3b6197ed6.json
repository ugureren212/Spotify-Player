{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MrMuscle\\\\Desktop\\\\spotifyApp\\\\spotify-player\\\\src\\\\Player.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Player({\n  accessToken,\n  trackUri\n}) {\n  _s();\n\n  const [play, setPlay] = useState(false);\n  useEffect(() => setPlay(true), [trackUri]);\n  if (!accessToken) return null;\n  return /*#__PURE__*/_jsxDEV(SpotifyPlayer, {\n    token: accessToken,\n    showSaveIcon: true,\n    callback: state => {\n      if (!state.isPlaying) setPlay(false);\n    },\n    play: play,\n    uris: trackUri ? [trackUri] : []\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Player, \"jVhLcXDeOrLi5A95zDr62ndrz9E=\");\n\n_c = Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["C:/Users/MrMuscle/Desktop/spotifyApp/spotify-player/src/Player.js"],"names":["useState","useEffect","SpotifyPlayer","Player","accessToken","trackUri","play","setPlay","state","isPlaying"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,aAAP,MAA0B,4BAA1B;;AAEA,eAAe,SAASC,MAAT,CAAgB;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAhB,EAA2C;AAAA;;AACzD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,KAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAMM,OAAO,CAAC,IAAD,CAAd,EAAsB,CAACF,QAAD,CAAtB,CAAT;AAEA,MAAI,CAACD,WAAL,EAAkB,OAAO,IAAP;AAClB,sBACC,QAAC,aAAD;AACC,IAAA,KAAK,EAAEA,WADR;AAEC,IAAA,YAAY,MAFb;AAGC,IAAA,QAAQ,EAAGI,KAAD,IAAW;AACpB,UAAI,CAACA,KAAK,CAACC,SAAX,EAAsBF,OAAO,CAAC,KAAD,CAAP;AACtB,KALF;AAMC,IAAA,IAAI,EAAED,IANP;AAOC,IAAA,IAAI,EAAED,QAAQ,GAAG,CAACA,QAAD,CAAH,GAAgB;AAP/B;AAAA;AAAA;AAAA;AAAA,UADD;AAWA;;GAjBuBF,M;;KAAAA,M","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport SpotifyPlayer from \"react-spotify-web-playback\";\r\n\r\nexport default function Player({ accessToken, trackUri }) {\r\n\tconst [play, setPlay] = useState(false);\r\n\r\n\tuseEffect(() => setPlay(true), [trackUri]);\r\n\r\n\tif (!accessToken) return null;\r\n\treturn (\r\n\t\t<SpotifyPlayer\r\n\t\t\ttoken={accessToken}\r\n\t\t\tshowSaveIcon\r\n\t\t\tcallback={(state) => {\r\n\t\t\t\tif (!state.isPlaying) setPlay(false);\r\n\t\t\t}}\r\n\t\t\tplay={play}\r\n\t\t\turis={trackUri ? [trackUri] : []}\r\n\t\t/>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}