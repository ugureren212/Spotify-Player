{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MrMuscle\\\\Desktop\\\\spotifyApp\\\\music-stat-app\\\\src\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport useAuth from \"./useAuth\";\nimport { Container, Form } from \"react-bootstrap\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"441bca7af371439ca25719b57bef08b8\"\n});\nexport default function Dashboard({\n  code\n}) {\n  _s();\n\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  console.log(searchResults);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n    spotifyApi.searchTracks(search).then(res => {\n      setSearchResults(res.body.tracks.items.map(track => {\n        //find smallest image in track object\n        const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        }, track.album.images[0]);\n        return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: smallestAlbumImage.url\n        };\n      }));\n    });\n  }, [search, accessToken]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex flex-column py-2\",\n    style: {\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"search\",\n      placeholder: \"Search Songs/Artists\",\n      value: search,\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 my-2\",\n      style: {\n        overflowY: \"auto\"\n      },\n      children: \"Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Dashboard, \"Z2Gwgh21IOX6Mc5b1iJy+jBr3GI=\", false, function () {\n  return [useAuth];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/MrMuscle/Desktop/spotifyApp/music-stat-app/src/Dashboard.js"],"names":["useState","useEffect","useAuth","Container","Form","SpotifyWebApi","spotifyApi","clientId","Dashboard","code","accessToken","search","setSearch","searchResults","setSearchResults","console","log","setAccessToken","searchTracks","then","res","body","tracks","items","map","track","smallestAlbumImage","album","images","reduce","smallest","image","height","artist","artists","name","title","uri","albumUrl","url","e","target","value","overflowY"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,iBAAhC;AACA,OAAOC,aAAP,MAA0B,sBAA1B;;AAEA,MAAMC,UAAU,GAAG,IAAID,aAAJ,CAAkB;AACjCE,EAAAA,QAAQ,EAAE;AADuB,CAAlB,CAAnB;AAIA,eAAe,SAASC,SAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAA2B;AAAA;;AACtC,QAAMC,WAAW,GAAGR,OAAO,CAACO,IAAD,CAA3B;AACA,QAAM,CAACE,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,EAAD,CAAlD;AACAe,EAAAA,OAAO,CAACC,GAAR,CAAYH,aAAZ;AAGAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACS,WAAL,EAAkB;AAClBJ,IAAAA,UAAU,CAACW,cAAX,CAA0BP,WAA1B;AACH,GAHQ,EAGN,CAACA,WAAD,CAHM,CAAT;AAKAT,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACU,MAAL,EAAa,OAAOG,gBAAgB,CAAC,EAAD,CAAvB;AACb,QAAI,CAACJ,WAAL,EAAkB;AAElBJ,IAAAA,UAAU,CAACY,YAAX,CAAwBP,MAAxB,EAAgCQ,IAAhC,CAAqCC,GAAG,IAAI;AACxCN,MAAAA,gBAAgB,CAACM,GAAG,CAACC,IAAJ,CAASC,MAAT,CAAgBC,KAAhB,CAAsBC,GAAtB,CAA0BC,KAAK,IAAI;AAChD;AACA,cAAMC,kBAAkB,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,MAAnB,CACvB,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACnB,cAAIA,KAAK,CAACC,MAAN,GAAeF,QAAQ,CAACE,MAA5B,EAAoC,OAAOD,KAAP;AACpC,iBAAOD,QAAP;AACD,SAJsB,EAIrBL,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmB,CAAnB,CAJqB,CAA3B;AAMA,eAAO;AACHK,UAAAA,MAAM,EAAER,KAAK,CAACS,OAAN,CAAc,CAAd,EAAiBC,IADtB;AAEHC,UAAAA,KAAK,EAAEX,KAAK,CAACU,IAFV;AAGHE,UAAAA,GAAG,EAAEZ,KAAK,CAACY,GAHR;AAIHC,UAAAA,QAAQ,EAAEZ,kBAAkB,CAACa;AAJ1B,SAAP;AAMH,OAdgB,CAAD,CAAhB;AAeH,KAhBD;AAiBH,GArBQ,EAqBN,CAAC5B,MAAD,EAASD,WAAT,CArBM,CAAT;AAuBA,sBACI,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,yBAArB;AAA+C,IAAA,KAAK,EAAE;AAACsB,MAAAA,MAAM,EAAE;AAAT,KAAtD;AAAA,4BACI,QAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,WAAW,EAAC,sBAAxC;AAA+D,MAAA,KAAK,EAAErB,MAAtE;AAA8E,MAAA,QAAQ,EAAG6B,CAAC,IAAI5B,SAAS,CAAC4B,CAAC,CAACC,MAAF,CAASC,KAAV;AAAvG;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA/CuBnC,S;UACAN,O;;;KADAM,S","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport useAuth from \"./useAuth\"\r\nimport { Container, Form } from \"react-bootstrap\";\r\nimport SpotifyWebApi from \"spotify-web-api-node\";\r\n\r\nconst spotifyApi = new SpotifyWebApi({\r\n    clientId: \"441bca7af371439ca25719b57bef08b8\",\r\n})\r\n\r\nexport default function Dashboard({code}) {\r\n    const accessToken = useAuth(code)\r\n    const [search, setSearch] = useState(\"\")\r\n    const [searchResults, setSearchResults] = useState([])\r\n    console.log(searchResults)\r\n\r\n\r\n    useEffect(() => {\r\n        if (!accessToken) return\r\n        spotifyApi.setAccessToken(accessToken)\r\n    }, [accessToken])\r\n\r\n    useEffect(() => {\r\n        if (!search) return setSearchResults([])\r\n        if (!accessToken) return\r\n\r\n        spotifyApi.searchTracks(search).then(res => {\r\n            setSearchResults(res.body.tracks.items.map(track => {\r\n                //find smallest image in track object\r\n                const smallestAlbumImage = track.album.images.reduce(\r\n                    (smallest, image) => {\r\n                      if (image.height < smallest.height) return image\r\n                      return smallest\r\n                    },track.album.images[0]\r\n                )\r\n                return {\r\n                    artist: track.artists[0].name,\r\n                    title: track.name,\r\n                    uri: track.uri,\r\n                    albumUrl: smallestAlbumImage.url\r\n                }\r\n            }))\r\n        })\r\n    }, [search, accessToken])\r\n    \r\n    return(\r\n        <Container className=\"d-flex flex-column py-2\" style={{height: \"100vh\"}}>\r\n            <Form.Control type=\"search\" placeholder=\"Search Songs/Artists\" value={search} onChange={ e => setSearch(e.target.value)}\r\n            />\r\n            <div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\r\n                Songs\r\n            </div>\r\n            <div>Bottom</div>\r\n        \r\n        </Container>\r\n    )\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}