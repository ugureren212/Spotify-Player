{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nexport default function useAuth(code) {\n  _s();\n\n  const [accessToken, setAccessToken] = useState();\n  const [refreshToken, setRefreshToken] = useState();\n  const [expiresIn, setExpiresIn] = useState();\n  useEffect(() => {\n    axios.post(\"http://localhost:3001/login\", {\n      code\n    }).then(res => {\n      setAccessToken(res.data.accessToken);\n      setRefreshToken(res.data.refreshToken);\n      setExpiresIn(res.data.expiresIn); //clear URL\n\n      window.history.pushState({}, null, \"/\");\n    }).catch(err => {\n      console.log(err);\n      console.log(\"Something went wrong so you are sent back to the login page\");\n      window.location = \"/\";\n    });\n  }, [code]); //effect to refresh token every hour\n\n  useEffect(() => {\n    //prevent token refreshing before the login useEffect\n    if (!refreshToken || !expiresIn) return;\n    const interval = setInterval(() => {\n      axios.post(\"http://localhost:3001/refresh\", {\n        refreshToken\n      }).then(res => {\n        setAccessToken(res.data.accessToken);\n        setExpiresIn(res.data.expiresIn); // window.history.pushState({}, null, \"/\")\n      }).catch(err => {\n        console.log(err);\n        console.log(\"Something went wrong with refreshing access token\");\n        window.location = \"/\";\n      });\n    }, (expiresIn - 60) * 1000);\n    return () => clearInterval(interval);\n  }, [refreshToken, expiresIn]);\n  return accessToken;\n}\n\n_s(useAuth, \"E9KOao32uIhQ/xJLaKV8nLvpvcw=\");","map":{"version":3,"sources":["C:/Users/MrMuscle/Desktop/spotifyApp/music-stat-app/src/useAuth.js"],"names":["useState","useEffect","axios","useAuth","code","accessToken","setAccessToken","refreshToken","setRefreshToken","expiresIn","setExpiresIn","post","then","res","data","window","history","pushState","catch","err","console","log","location","interval","setInterval","clearInterval"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;AAAA;;AACrC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,EAA9C;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,EAAhD;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,EAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACfC,IAAAA,KAAK,CACHS,IADF,CACO,6BADP,EACsC;AAAEP,MAAAA;AAAF,KADtC,EAEEQ,IAFF,CAEQC,GAAD,IAAS;AACdP,MAAAA,cAAc,CAACO,GAAG,CAACC,IAAJ,CAAST,WAAV,CAAd;AACAG,MAAAA,eAAe,CAACK,GAAG,CAACC,IAAJ,CAASP,YAAV,CAAf;AACAG,MAAAA,YAAY,CAACG,GAAG,CAACC,IAAJ,CAASL,SAAV,CAAZ,CAHc,CAId;;AACAM,MAAAA,MAAM,CAACC,OAAP,CAAeC,SAAf,CAAyB,EAAzB,EAA6B,IAA7B,EAAmC,GAAnC;AACA,KARF,EASEC,KATF,CASSC,GAAD,IAAS;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CACC,6DADD;AAGAN,MAAAA,MAAM,CAACO,QAAP,GAAkB,GAAlB;AACA,KAfF;AAgBA,GAjBQ,EAiBN,CAAClB,IAAD,CAjBM,CAAT,CALqC,CAwBrC;;AACAH,EAAAA,SAAS,CAAC,MAAM;AACf;AACA,QAAI,CAACM,YAAD,IAAiB,CAACE,SAAtB,EAAiC;AAEjC,UAAMc,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAClCtB,MAAAA,KAAK,CACHS,IADF,CACO,+BADP,EACwC;AAAEJ,QAAAA;AAAF,OADxC,EAEEK,IAFF,CAEQC,GAAD,IAAS;AACdP,QAAAA,cAAc,CAACO,GAAG,CAACC,IAAJ,CAAST,WAAV,CAAd;AACAK,QAAAA,YAAY,CAACG,GAAG,CAACC,IAAJ,CAASL,SAAV,CAAZ,CAFc,CAGd;AACA,OANF,EAOES,KAPF,CAOSC,GAAD,IAAS;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,mDAAZ;AACAN,QAAAA,MAAM,CAACO,QAAP,GAAkB,GAAlB;AACA,OAXF;AAYA,KAb2B,EAazB,CAACb,SAAS,GAAG,EAAb,IAAmB,IAbM,CAA5B;AAcA,WAAO,MAAMgB,aAAa,CAACF,QAAD,CAA1B;AACA,GAnBQ,EAmBN,CAAChB,YAAD,EAAeE,SAAf,CAnBM,CAAT;AAqBA,SAAOJ,WAAP;AACA;;GA/CuBF,O","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function useAuth(code) {\r\n\tconst [accessToken, setAccessToken] = useState();\r\n\tconst [refreshToken, setRefreshToken] = useState();\r\n\tconst [expiresIn, setExpiresIn] = useState();\r\n\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.post(\"http://localhost:3001/login\", { code })\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetAccessToken(res.data.accessToken);\r\n\t\t\t\tsetRefreshToken(res.data.refreshToken);\r\n\t\t\t\tsetExpiresIn(res.data.expiresIn);\r\n\t\t\t\t//clear URL\r\n\t\t\t\twindow.history.pushState({}, null, \"/\");\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t\"Something went wrong so you are sent back to the login page\"\r\n\t\t\t\t);\r\n\t\t\t\twindow.location = \"/\";\r\n\t\t\t});\r\n\t}, [code]);\r\n\r\n\t//effect to refresh token every hour\r\n\tuseEffect(() => {\r\n\t\t//prevent token refreshing before the login useEffect\r\n\t\tif (!refreshToken || !expiresIn) return;\r\n\r\n\t\tconst interval = setInterval(() => {\r\n\t\t\taxios\r\n\t\t\t\t.post(\"http://localhost:3001/refresh\", { refreshToken })\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tsetAccessToken(res.data.accessToken);\r\n\t\t\t\t\tsetExpiresIn(res.data.expiresIn);\r\n\t\t\t\t\t// window.history.pushState({}, null, \"/\")\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\tconsole.log(\"Something went wrong with refreshing access token\");\r\n\t\t\t\t\twindow.location = \"/\";\r\n\t\t\t\t});\r\n\t\t}, (expiresIn - 60) * 1000);\r\n\t\treturn () => clearInterval(interval);\r\n\t}, [refreshToken, expiresIn]);\r\n\r\n\treturn accessToken;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}